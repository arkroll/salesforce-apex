trigger RouteLeads on Lead (After update) {

    Map<ID, Set<ID>> oldLeads = new Map<ID, Set<ID>>();

    for (Lead lead : Trigger.new) {
        
        System.debug('first FOR');
        
        String newOwnerId = lead.OwnerID;
    
        String oldOwnerId = Trigger.oldMap.get(lead.Id).OwnerId;
        
        Boolean rTR = False;
        
        List<CampaignMember> cM = [SELECT Id, CampaignId FROM CampaignMember WHERE Id = :lead.Id];
        
        while (rTR == False){
         
            for (CampaignMember aM : cM) {
          
                for (Campaign c : [SELECT Id, route_to_rep_yn__c FROM Campaign WHERE Id = :aM.CampaignId]) {
                
                    rTR = c.route_to_rep_yn__c;
                }
            }
        }
    
         if (
             (((lead.OwnerId != Trigger.oldMap.get(lead.Id).OwnerId) && ((lead.OwnerId == '00GA0000002FEzJ') || (lead.OwnerId == '00GA0000000YKi3') || (newOwnerId.startsWith('005A') && oldOwnerId.startsWith('005A')))
             ) || 
             ((newOwnerId == oldOwnerId) && lead.ISConverted == True)
             ) && 
             LeadAssignRuleUtil.firstTime == true) {
            
            System.debug(lead.Name + 'qualifies');
            System.debug('oldLead Map existing values for OwnerId' + oldLeads.get(Trigger.oldMap.get(lead.Id).OwnerId));
            if (oldLeads.get(Trigger.oldMap.get(lead.Id).OwnerId) == null) {
                oldLeads.put(Trigger.oldMap.get(lead.Id).OwnerId, new Set<ID>{lead.OwnerId});
                System.debug('oldLead Map: first put' + oldLeads.get(Trigger.oldMap.get(lead.Id).OwnerId));
            }
            else{
                (oldLeads.get(Trigger.oldMap.get(lead.Id).OwnerId)).add(lead.OwnerId);
            }
            
            System.debug('oldLead Map: set values for OwnerID ' + Trigger.oldMap.get(lead.Id).OwnerId  + oldLeads.get(Trigger.oldMap.get(lead.Id).OwnerId));        
        }
        else{
        System.debug(lead.Name + 'does not qualify' + ', old Owner Id: ' + oldOwnerId + ', new Owner Id: ' + newOwnerId);
        }
    }
    if (oldLeads.keySet().isEmpty() == false){ 
        
        for (ID idVal : oldLeads.keySet()) {
            
            String sId = idVal;
            
            sID = sID.substring(0,15);
            
            Integer numLeads = oldLeads.get(idVal).size();
            
            System.debug('Old Lead Owner Id: ' + sID + ', Num Leads to Be Assigned: ' + numLeads);
      
            List<Lead> newLeads = [SELECT Id, OwnerId, mkto_si__Priority__c, mkto2__Lead_Score__c FROM Lead WHERE repGrp__c = :sId AND OwnerId = '00GA0000000Y0Ep' AND mkto_si__Priority__c != null AND mkto2__Lead_Score__c !=null ORDER BY mkto_si__Priority__c, mkto2__Lead_Score__c DESC LIMIT :numLeads];
           
            for (Lead oLead : newLeads){
            
                System.debug('new Leads ' + oLead.OwnerId + ', Priority Score: ' + oLead.mkto_si__Priority__c + ', Lead Score: ' + oLead.mkto2__Lead_Score__c);
            }
            
            Database.DMLOptions dmo = new Database.DMLOptions();
            
            dmo.assignmentRuleHeader.useDefaultRule= true;
            
            for (Lead aLead : newLeads){
            
                System.debug(aLead.Id);
            
                aLead.setOptions(dmo);
            }
            LeadAssignRuleUtil.firstTime = false;
            
            Database.Update(newLeads);
        }
    }
        
}